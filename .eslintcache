[{"C:\\WorkSpace\\Inu20TS\\src\\index.tsx":"1","C:\\WorkSpace\\Inu20TS\\src\\pages\\auth\\auth.tsx":"2","C:\\WorkSpace\\Inu20TS\\src\\App.tsx":"3","C:\\WorkSpace\\Inu20TS\\src\\shared\\constants\\routes.tsx":"4","C:\\WorkSpace\\Inu20TS\\src\\pages\\chat\\chatRoom.tsx":"5","C:\\WorkSpace\\Inu20TS\\src\\redux\\actions\\actionTypes.ts":"6","C:\\WorkSpace\\Inu20TS\\src\\redux\\actions\\alert.ts":"7","C:\\WorkSpace\\Inu20TS\\src\\pages\\restaurant\\restaurantPage.tsx":"8","C:\\WorkSpace\\Inu20TS\\src\\shared\\components\\alert\\index.tsx":"9","C:\\WorkSpace\\Inu20TS\\src\\pages\\chat\\chatPage.tsx":"10","C:\\WorkSpace\\Inu20TS\\src\\pages\\auth\\index.tsx":"11","C:\\WorkSpace\\Inu20TS\\src\\shared\\components\\nav\\nav.tsx":"12","C:\\WorkSpace\\Inu20TS\\src\\shared\\components\\nav\\index.tsx":"13","C:\\WorkSpace\\Inu20TS\\src\\pages\\home\\index.tsx":"14","C:\\WorkSpace\\Inu20TS\\src\\pages\\comics\\upload.tsx":"15"},{"size":383,"mtime":1613713751430,"results":"16","hashOfConfig":"17"},{"size":3797,"mtime":1615078756009,"results":"18","hashOfConfig":"17"},{"size":2410,"mtime":1620008622659,"results":"19","hashOfConfig":"17"},{"size":83,"mtime":1614053145984,"results":"20","hashOfConfig":"17"},{"size":2942,"mtime":1614053930213,"results":"21","hashOfConfig":"17"},{"size":213,"mtime":1614055618231,"results":"22","hashOfConfig":"17"},{"size":286,"mtime":1614058256233,"results":"23","hashOfConfig":"17"},{"size":830,"mtime":1615764808873,"results":"24","hashOfConfig":"17"},{"size":1335,"mtime":1614485551068,"results":"25","hashOfConfig":"17"},{"size":2622,"mtime":1614485546036,"results":"26","hashOfConfig":"17"},{"size":185,"mtime":1606273694990,"results":"27","hashOfConfig":"17"},{"size":5324,"mtime":1615776564736,"results":"28","hashOfConfig":"17"},{"size":173,"mtime":1606273694994,"results":"29","hashOfConfig":"17"},{"size":1721,"mtime":1616118825741,"results":"30","hashOfConfig":"17"},{"size":682,"mtime":1620009916785,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1q635dz",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\WorkSpace\\Inu20TS\\src\\index.tsx",[],["64","65"],"C:\\WorkSpace\\Inu20TS\\src\\pages\\auth\\auth.tsx",[],"C:\\WorkSpace\\Inu20TS\\src\\App.tsx",[],"C:\\WorkSpace\\Inu20TS\\src\\shared\\constants\\routes.tsx",[],"C:\\WorkSpace\\Inu20TS\\src\\pages\\chat\\chatRoom.tsx",[],"C:\\WorkSpace\\Inu20TS\\src\\redux\\actions\\actionTypes.ts",[],"C:\\WorkSpace\\Inu20TS\\src\\redux\\actions\\alert.ts",[],"C:\\WorkSpace\\Inu20TS\\src\\pages\\restaurant\\restaurantPage.tsx",[],"C:\\WorkSpace\\Inu20TS\\src\\shared\\components\\alert\\index.tsx",[],"C:\\WorkSpace\\Inu20TS\\src\\pages\\chat\\chatPage.tsx",[],"C:\\WorkSpace\\Inu20TS\\src\\pages\\auth\\index.tsx",[],"C:\\WorkSpace\\Inu20TS\\src\\shared\\components\\nav\\nav.tsx",["66","67","68"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./nav.scss\";\r\nimport firebase from \"firebase/app\";\r\nimport { useStateValue } from \"../../tools/state\";\r\nimport {\r\n  ACTION_CHANGE_THEME,\r\n  THEME_DARK,\r\n  THEME_LIGHT,\r\n} from \"../../constants/theme\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport {\r\n  faAdjust,\r\n  faCircleNotch,\r\n  faBars,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { ROUTES } from \"../../constants/routes\";\r\nimport { setAlert } from \"../../../redux/actions/alert\";\r\n\r\nconst Nav: React.FC = (props) => {\r\n  const [{ theme }, dispatch] = useStateValue();\r\n  const [menuDisplayed, setMenuDisplayed] = useState(false);\r\n  const [user, isAuthLoading, error] = useAuthState(firebase.auth());\r\n  const changeTheme = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n  ) => {\r\n    document.documentElement.className = \"\";\r\n    document.documentElement.classList.add(\r\n      theme === THEME_DARK ? THEME_LIGHT : THEME_DARK\r\n    );\r\n    event.preventDefault();\r\n    dispatch({\r\n      type: ACTION_CHANGE_THEME,\r\n      theme: theme === THEME_DARK ? THEME_LIGHT : THEME_DARK,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.documentElement.className = theme;\r\n\r\n    window.onclick = (e: MouseEvent) => {\r\n      if (menuDisplayed) {\r\n        setMenuDisplayed(false);\r\n      }\r\n    };\r\n  }, [menuDisplayed, theme]);\r\n\r\n  useEffect(() => {\r\n    console.log(error);\r\n    if (error)\r\n      dispatch(\r\n        setAlert({ type: \"warning\", message: error.message, duration: 10 })\r\n      );\r\n  }, [error]);\r\n\r\n  const routesList = [\r\n    { name: \"Chat\", link: ROUTES.CHAT },\r\n    { name: \"Restaurant Archive\", link: ROUTES.RESTAUTANT },\r\n    //{ name: \"Comics\", link: \"./comics\" },\r\n  ];\r\n\r\n  return (\r\n    <nav className={`${theme === THEME_LIGHT ? \"nav-light\" : \"nav-dark\"}`}>\r\n      <span className=\"nav-left\">\r\n        <NavLink id=\"logo\" to={\"./\"}>\r\n          <h3>Inu20TS</h3>\r\n        </NavLink>\r\n        {routesList.map((route) => (\r\n          <NavLink\r\n            className=\"nav-link\"\r\n            activeClassName=\"nav-link-active\"\r\n            to={route.link}\r\n            key={route.name}\r\n          >\r\n            {route.name}\r\n          </NavLink>\r\n        ))}\r\n      </span>\r\n\r\n      <span className=\"nav-right\">\r\n        <a href=\"\" onClick={(e) => changeTheme(e)}>\r\n          {theme === THEME_LIGHT ? \"Dark Mode\" : \"Light Mode\"}\r\n          <FontAwesomeIcon icon={faAdjust} />\r\n        </a>\r\n        {isAuthLoading && (\r\n          <div className=\"a-styled\">\r\n            <FontAwesomeIcon icon={faCircleNotch} spin />\r\n          </div>\r\n        )}\r\n        {!isAuthLoading && !user && (\r\n          <NavLink to={\"./auth\"}>\r\n            Sign In\r\n            <FontAwesomeIcon icon={faUserCircle} />\r\n          </NavLink>\r\n        )}\r\n        {!isAuthLoading && user && (\r\n          <NavLink to={\"./auth\"}>\r\n            Account\r\n            <FontAwesomeIcon icon={faUserCircle} />\r\n          </NavLink>\r\n        )}\r\n      </span>\r\n\r\n      <div id=\"mobileMenu\">\r\n        <button\r\n          id=\"mobileMenuTrigger\"\r\n          className=\"mobileMenuTrigger\"\r\n          onClick={() => {\r\n            setMenuDisplayed(!menuDisplayed);\r\n          }}\r\n        >\r\n          {menuDisplayed ? (\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          ) : (\r\n            <FontAwesomeIcon icon={faBars} className=\"mobileMenuTrigger\" />\r\n          )}\r\n        </button>\r\n        {menuDisplayed && (\r\n          <div id=\"mobileMenuBody\">\r\n            <a\r\n              className=\"mobile-menu-button\"\r\n              href=\"\"\r\n              onClick={(e) => {\r\n                changeTheme(e);\r\n                setMenuDisplayed(false);\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faAdjust} />\r\n              {theme === THEME_LIGHT ? \"Dark Mode\" : \"Light Mode\"}\r\n            </a>\r\n            {isAuthLoading && (\r\n              <div className=\"mobile-menu-button\">\r\n                <FontAwesomeIcon icon={faCircleNotch} spin />\r\n              </div>\r\n            )}\r\n            {!isAuthLoading && !user && (\r\n              <Link\r\n                className=\"mobile-menu-button\"\r\n                to={\"./auth\"}\r\n                onClick={() => setMenuDisplayed(false)}\r\n              >\r\n                <FontAwesomeIcon icon={faUserCircle} />\r\n                Sign In\r\n              </Link>\r\n            )}\r\n            {!isAuthLoading && user && (\r\n              <Link\r\n                className=\"mobile-menu-button\"\r\n                to={\"./auth\"}\r\n                onClick={() => setMenuDisplayed(false)}\r\n              >\r\n                <FontAwesomeIcon icon={faUserCircle} />\r\n                Account\r\n              </Link>\r\n            )}\r\n            {routesList.map((route) => (\r\n              <Link\r\n                className=\"mobile-menu-button\"\r\n                to={route.link}\r\n                key={route.name}\r\n                onClick={() => setMenuDisplayed(false)}\r\n              >\r\n                {route.name}\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","C:\\WorkSpace\\Inu20TS\\src\\shared\\components\\nav\\index.tsx",[],"C:\\WorkSpace\\Inu20TS\\src\\pages\\home\\index.tsx",["69","70"],"C:\\WorkSpace\\Inu20TS\\src\\pages\\comics\\upload.tsx",["71","72","73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":57,"column":6,"nodeType":"81","endLine":57,"endColumn":13,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":84,"column":9,"nodeType":"85","endLine":84,"endColumn":52},{"ruleId":"83","severity":1,"message":"84","line":123,"column":13,"nodeType":"85","endLine":130,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":1,"column":10,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"90","line":57,"column":7,"nodeType":"88","messageId":"89","endLine":57,"endColumn":14},{"ruleId":"86","severity":1,"message":"91","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":17},{"ruleId":"86","severity":1,"message":"92","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":19},{"ruleId":"86","severity":1,"message":"93","line":6,"column":10,"nodeType":"88","messageId":"89","endLine":6,"endColumn":18},{"ruleId":"86","severity":1,"message":"94","line":6,"column":20,"nodeType":"88","messageId":"89","endLine":6,"endColumn":31},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["97"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'url' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'storage' is defined but never used.","'imageFile' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [dispatch, error]",{"range":"100","text":"101"},[1753,1760],"[dispatch, error]"]